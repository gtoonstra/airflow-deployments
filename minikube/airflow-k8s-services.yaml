apiVersion: v1
kind: Service
metadata:
  name: airflow-web
  labels:
    app: airflow
spec:
  type: NodePort
  selector:
    app: airflow
    tier: web
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: web
      nodePort: 32080
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-flower
  labels:
    app: airflow
spec:
  type: NodePort
  selector:
    app: airflow
    tier: flower
  ports:
    - name: flower
      protocol: TCP
      port: 5555
      targetPort: flower
      nodePort: 32081
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: dags-pv
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadOnlyMany
  hostPath:
    path: "/dags"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dags-pv-claim
  labels:
    app: airflow
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
      - name: web
        image: 192.168.99.1:5000/airflow-k8s:latest
        env:
        - name: AIRFLOW_HOME
          value: /usr/local/airflow
        - name: SQL_HOST
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-host
        - name: SQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-database
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-user
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-password
        ports:
        - name: web
          containerPort: 8080
        volumeMounts:
        - mountPath: /usr/local/airflow/dags
          name: dags-storage
        args: ["webserver"]
      volumes:
        - name: dags-storage
          persistentVolumeClaim:
            claimName: dags-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-flower
  labels:
    app: airflow
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: flower
    spec:
      restartPolicy: Always
      containers:
      - name: flower
        image: 192.168.99.1:5000/airflow-k8s:latest
        env:
        - name: AIRFLOW_HOME
          value: /usr/local/airflow
        - name: SQL_HOST
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-host
        - name: SQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-database
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-user
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-password
        ports:
        - name: flower
          containerPort: 5555
        args: ["flower"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-scheduler
  labels:
    app: airflow
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: scheduler
    spec:
      restartPolicy: Always
      containers:
      - name: scheduler
        image: 192.168.99.1:5000/airflow-k8s:latest
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        - name: SQL_HOST
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-host
        - name: SQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-database
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-user
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-password
        volumeMounts:
        - mountPath: "/usr/local/airflow/dags"
          name: dags-storage
        args: ["scheduler"]
      volumes:
        - name: dags-storage
          persistentVolumeClaim:
            claimName: dags-pv-claim
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: airflow-worker
spec:
  replicas: 5
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      containers:
      - name: worker
        image: 192.168.99.1:5000/airflow-k8s:latest
        volumeMounts:
        - mountPath: "/usr/local/airflow/dags"
          name: dags-storage
        env:
        - name: AIRFLOW_HOME
          value: /usr/local/airflow
        - name: SQL_HOST
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-host
        - name: SQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-database
        - name: SQL_USER
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-user
        - name: SQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airflow-secret
              key: sql-password
        args: ["worker"]
      volumes:
        - name: dags-storage
          persistentVolumeClaim:
            claimName: dags-pv-claim

